/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package dnfapp;
import java.util.HashMap;
import java.util.Map;
import java.util.ArrayList;

/**
 *
 * @author Frans
 */
public class DeliveryFeeCalculator extends javax.swing.JFrame {

    private HashMap<String, User> userlist = new HashMap<String, User>();
    private HashMap<String, String> usedEmail = new HashMap<String, String>();
    private HashMap<String, Integer> VALID_DOMAIN = new HashMap<String, Integer>();
    private HashMap<String, Package> DeliveryList = new HashMap<String, Package>();
    private HashMap<String, Kurir> ListKurir = new HashMap<String, Kurir>();
    
    
    public DeliveryFeeCalculator() {
        initComponents();
        generateCity();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Asal = new javax.swing.JComboBox<>();
        Tujuan = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        getContentPane().add(Asal, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 105, 120, -1));

        Tujuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TujuanActionPerformed(evt);
            }
        });
        getContentPane().add(Tujuan, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 110, 120, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TujuanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TujuanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TujuanActionPerformed
    
    private void generateCity(){
        ArrayList<String> listkota = new ArrayList<>();
        listkota.add( "Agam" );
        listkota.add( "Alor" );
        listkota.add( "Ambon" );
        listkota.add( "Asahan" );
        listkota.add( "Asmat" );
        listkota.add( "Balikpapan" );
        listkota.add( "Banda Aceh" );
        listkota.add( "Bandar Lampung" );
        listkota.add( "Bandung" );
        listkota.add( "Banjar" );
        listkota.add( "Banjarbaru" );
        listkota.add( "Banjarmasin" );
        listkota.add( "Batam" );
        listkota.add( "Batu" );
        listkota.add( "Bekasi" );
        listkota.add( "Bengkulu" );
        listkota.add( "Binjai" );
        listkota.add( "Bitung" );
        listkota.add( "Blitar" );
        listkota.add( "Bogor" );
        listkota.add( "Bukittinggi" );
        listkota.add( "Calang" );
        listkota.add( "Cepu" );
        listkota.add( "Ciamis" );
        listkota.add( "Cianjur" );
        listkota.add( "Ciawi" );
        listkota.add( "Cibubur" );
        listkota.add( "Cilegon" );
        listkota.add( "Cileungsi" );
        listkota.add( "Cimahi" );
        listkota.add( "Cirebon" );
        listkota.add( "Dairi" );
        listkota.add( "Darmasraya" );
        listkota.add( "Deliserdang" );
        listkota.add( "Demak" );
        listkota.add( "Denpasar" );
        listkota.add( "Depok" );
        listkota.add( "Dogiyai" );
        listkota.add( "Dompu" );
        listkota.add( "Donggala" );
        listkota.add( "Dumai" );
        listkota.add( "Ende" );
        listkota.add( "Enkerang" );
        listkota.add( "Fakfak" );
        listkota.add( "Flores Timur" );
        listkota.add( "Garut" );
        listkota.add( "Gayo Lues" );
        listkota.add( "Gianyar" );
        listkota.add( "Gorontalo" );
        listkota.add( "Gowa" );
        listkota.add( "Gresik" );
        listkota.add( "Grobokan" );
        listkota.add( "Gunung Kidul" );
        listkota.add( "Gunung Mas" );
        listkota.add( "Gunung Sitoli" );
        listkota.add( "Halmahera Tengah" );
        listkota.add( "Hulu Sungai Selatan" );
        listkota.add( "Humbang Hasundutan" );
        listkota.add( "Indragiri" );
        listkota.add( "Indramayu" );
        listkota.add( "Jailolo" );
        listkota.add( "Jakarta Barat" );
        listkota.add( "Jakarta Pusat" );
        listkota.add( "Jakarta Selatan" );
        listkota.add( "Jakarta Timur" );
        listkota.add( "Jakarta Utara" );
        listkota.add( "Jambi" );
        listkota.add( "Jayapura" );
        listkota.add( "Jember" );
        listkota.add( "Jepara" );
        listkota.add( "Jombang" );
        listkota.add( "Karo" );
        listkota.add( "Kediri" );
        listkota.add( "Kuningan" );
        listkota.add( "Kupang" );
        listkota.add( "Langsa" );
        listkota.add( "Lhokseumawe" );
        listkota.add( "Lubuklinggau" );
        listkota.add( "Madiun" );
        listkota.add( "Magelang" );
        listkota.add( "Makassar" );
        listkota.add( "Malang " );
        listkota.add( "Manado" );
        listkota.add( "Manokwari" );
        listkota.add( "Mataram" );
        listkota.add( "Medan" );
        listkota.add( "Metro" );
        listkota.add( "Mojokerto" );
        listkota.add( "Nabire" );
        listkota.add( "Nduga" );
        listkota.add( "Nias" );
        listkota.add( "Padang" );
        listkota.add( "Padang Panjang" );
        listkota.add( "Padang Sidempuan" );
        listkota.add( "Pagar Alam" );
        listkota.add( "Palangka Raya" );
        listkota.add( "Palembang" );
        listkota.add( "Palopo" );
        listkota.add( "Palu" );
        listkota.add( "Pangkalpinang" );
        listkota.add( "Parepare" );
        listkota.add( "Pariaman" );
        listkota.add( "Pasuruan" );
        listkota.add( "Payakumbuh" );
        listkota.add( "Pekalongan" );
        listkota.add( "Pekanbaru" );
        listkota.add( "Pematangsiantar" );
        listkota.add( "Pontianak" );
        listkota.add( "Prabumulih" );
        listkota.add( "Probolinggo" );
        listkota.add( "Raha" );
        listkota.add( "Ransiki" );
        listkota.add( "Rengat" );
        listkota.add( "Ruteng" );
        listkota.add( "Sabang" );
        listkota.add( "Salatiga" );
        listkota.add( "Tangerang" );
        listkota.add( "Tanjung Pinang" );
        listkota.add( "Tarakan" );
        listkota.add( "Tasikmalaya" );
        listkota.add( "Tegal" );
        listkota.add( "Ternate" );
        listkota.add( "Tulungagung" );
        listkota.add( "Wakatobi" );
        listkota.add( "Waropen" );
        listkota.add( "Wonogiri" );
        listkota.add( "Wonosobo" );
        listkota.add( "Yogyakarta" );
        for(int i =0;i<listkota.size();i++){
            Asal.addItem(listkota.get(i));
            Tujuan.addItem(listkota.get(i));
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeliveryFeeCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeliveryFeeCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeliveryFeeCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeliveryFeeCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeliveryFeeCalculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Asal;
    private javax.swing.JComboBox<String> Tujuan;
    // End of variables declaration//GEN-END:variables
}
