/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package dnfapp;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Frans
 */
public class UserMainMenu extends javax.swing.JFrame implements GenerateCity, CityCalc {

    //boolean state
    private boolean cek_resi;
    private boolean home_menu;
    private boolean setting;
    private boolean history;
    private boolean send;
    private boolean calc;
    //package boolean
    private boolean flammable;
    private boolean fragile;
    private boolean keepdry;
    private boolean protectfromheat;
    private boolean extraprotect;
    //current user obj
    private User currentUser;
    //HashMaps to Pass.
    private HashMap<String, User> userlist = new HashMap<String, User>();
    private HashMap<String, String> usedEmail = new HashMap<String, String>();
    private HashMap<String, Package> DeliveryList = new HashMap<String, Package>();
    private HashMap<String, Kurir> ListKurir = new HashMap<String, Kurir>();

    //private Generated HashMaps&ArrayList for City Index
    private HashMap<String, Kota> MapKota = new HashMap<String, Kota>();
    private ArrayList<String> listkota = new ArrayList<>();

    public UserMainMenu() {
        initComponents();
        generateCityCalc();
    }

    public UserMainMenu(HashMap<String, User> userlist, HashMap<String, String> usedEmail) {
        initComponents();
        this.userlist = userlist;
        this.usedEmail = usedEmail;
        generateCityCalc();
    }

    public UserMainMenu(HashMap<String, User> userlist, HashMap<String, String> usedEmail, HashMap<String, Package> DeliveryList, HashMap<String, Kurir> ListKurir, User currentUser) {
        initComponents();
        this.userlist = userlist;
        this.usedEmail = usedEmail;
        this.DeliveryList = DeliveryList;
        this.ListKurir = ListKurir;
        this.currentUser = currentUser;
        this.setResizable(false);
        UserMenuBG.requestFocus();
        WelcomeLabel.setText("Welcome, " + currentUser.getUsername());
        this.cek_resi = false;
        this.home_menu = true;
        this.setting = false;
        this.history = false;
        this.send = false;
        this.calc = false;
        ButtonController(false, true, false, false, false, false);
        boolean flammable = false;
        boolean fragile = false;
        boolean keepdry = false;
        boolean protectfromheat = false;
        boolean extraprotect = false;
        generateCityCalc();
        generateKategori();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        EditProfileButton = new javax.swing.JButton();
        AppVerButton = new javax.swing.JButton();
        ProfileButton = new javax.swing.JButton();
        LogOutButton = new javax.swing.JButton();
        KirimButton = new javax.swing.JButton();
        HomeButton = new javax.swing.JButton();
        KategoriCombobox = new javax.swing.JComboBox<>();
        WelcomeLabel = new javax.swing.JLabel();
        SendBeratField = new javax.swing.JTextField();
        AsalField = new javax.swing.JTextField();
        CekResiButton = new javax.swing.JButton();
        SettingButton = new javax.swing.JButton();
        CalculateBtn = new javax.swing.JButton();
        PriceLabelSend = new javax.swing.JLabel();
        PriceLabel = new javax.swing.JLabel();
        PenerimaField = new javax.swing.JTextField();
        TujuanField = new javax.swing.JTextField();
        KeepDryButton = new javax.swing.JButton();
        FragileButton = new javax.swing.JButton();
        FlameableButton = new javax.swing.JButton();
        ProtectButton = new javax.swing.JButton();
        SendPackageBG = new javax.swing.JLabel();
        TujuanCombobox = new javax.swing.JComboBox<>();
        AsalCombobox = new javax.swing.JComboBox<>();
        TambahanBGKirim = new javax.swing.JLabel();
        CostCalcBG = new javax.swing.JLabel();
        PriceCalcButton = new javax.swing.JButton();
        CekHistoryButton = new javax.swing.JButton();
        SendPackageButton = new javax.swing.JButton();
        SearchButton = new javax.swing.JButton();
        SettingGIF = new javax.swing.JLabel();
        Vector = new javax.swing.JLabel();
        SearchBar = new javax.swing.JTextField();
        SearchBarBG = new javax.swing.JLabel();
        UserMenuBG = new javax.swing.JLabel();
        SeeDetailButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        HistoryList = new javax.swing.JList<>();
        BGHistory = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setSize(new java.awt.Dimension(1280, 720));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        EditProfileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_EditProfile.png"))); // NOI18N
        EditProfileButton.setBorderPainted(false);
        EditProfileButton.setContentAreaFilled(false);
        EditProfileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditProfileButtonActionPerformed(evt);
            }
        });
        getContentPane().add(EditProfileButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 170, 301, 71));

        AppVerButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_AppVersion.png"))); // NOI18N
        AppVerButton.setBorderPainted(false);
        AppVerButton.setContentAreaFilled(false);
        AppVerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AppVerButtonActionPerformed(evt);
            }
        });
        getContentPane().add(AppVerButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 265, 306, 71));

        ProfileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_Profile.png"))); // NOI18N
        ProfileButton.setBorderPainted(false);
        ProfileButton.setContentAreaFilled(false);
        ProfileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProfileButtonActionPerformed(evt);
            }
        });
        getContentPane().add(ProfileButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(63, 90, 90, 90));

        LogOutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_Logout.png"))); // NOI18N
        LogOutButton.setBorderPainted(false);
        LogOutButton.setContentAreaFilled(false);
        LogOutButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogOutButtonMouseClicked(evt);
            }
        });
        LogOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogOutButtonActionPerformed(evt);
            }
        });
        getContentPane().add(LogOutButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 595, 70, 70));

        KirimButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_Kirim.png"))); // NOI18N
        KirimButton.setBorderPainted(false);
        KirimButton.setContentAreaFilled(false);
        KirimButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KirimButtonActionPerformed(evt);
            }
        });
        getContentPane().add(KirimButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 620, 135, 35));

        HomeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_Home_1.png"))); // NOI18N
        HomeButton.setBorderPainted(false);
        HomeButton.setContentAreaFilled(false);
        HomeButton.setPreferredSize(new java.awt.Dimension(144, 39));
        HomeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HomeButtonMouseClicked(evt);
            }
        });
        HomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeButtonActionPerformed(evt);
            }
        });
        getContentPane().add(HomeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 186, 53));

        KategoriCombobox.setBackground(new java.awt.Color(237, 238, 254));
        KategoriCombobox.setForeground(new java.awt.Color(76, 76, 76));
        KategoriCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Kategori-" }));
        getContentPane().add(KategoriCombobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(905, 329, 250, 40));

        WelcomeLabel.setFont(new java.awt.Font("Fira Sans", 3, 18)); // NOI18N
        WelcomeLabel.setForeground(new java.awt.Color(255, 255, 255));
        WelcomeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(WelcomeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 180, 215, 40));

        SendBeratField.setBackground(new java.awt.Color(237, 238, 254));
        SendBeratField.setFont(new java.awt.Font("Fira Sans", 0, 23)); // NOI18N
        SendBeratField.setForeground(new java.awt.Color(76, 76, 76));
        SendBeratField.setBorder(null);
        getContentPane().add(SendBeratField, new org.netbeans.lib.awtextra.AbsoluteConstraints(423, 330, 310, 40));

        AsalField.setBackground(new java.awt.Color(237, 238, 254));
        AsalField.setFont(new java.awt.Font("Fira Sans", 0, 23)); // NOI18N
        AsalField.setForeground(new java.awt.Color(76, 76, 76));
        AsalField.setBorder(null);
        getContentPane().add(AsalField, new org.netbeans.lib.awtextra.AbsoluteConstraints(403, 240, 240, 40));

        CekResiButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_CekResi_0.png"))); // NOI18N
        CekResiButton.setBorderPainted(false);
        CekResiButton.setContentAreaFilled(false);
        CekResiButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CekResiButtonMouseClicked(evt);
            }
        });
        CekResiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CekResiButtonActionPerformed(evt);
            }
        });
        getContentPane().add(CekResiButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 186, 53));

        SettingButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_Setting_0.png"))); // NOI18N
        SettingButton.setBorderPainted(false);
        SettingButton.setContentAreaFilled(false);
        SettingButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SettingButtonMouseClicked(evt);
            }
        });
        SettingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SettingButtonActionPerformed(evt);
            }
        });
        getContentPane().add(SettingButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 370, 186, 53));

        CalculateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_Hitung.png"))); // NOI18N
        CalculateBtn.setBorderPainted(false);
        CalculateBtn.setContentAreaFilled(false);
        CalculateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalculateBtnActionPerformed(evt);
            }
        });
        getContentPane().add(CalculateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 510, 135, 35));
        getContentPane().add(PriceLabelSend, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 550, 380, 60));

        PriceLabel.setBackground(new java.awt.Color(237, 238, 254));
        PriceLabel.setFont(new java.awt.Font("Fira Sans", 2, 48)); // NOI18N
        PriceLabel.setForeground(new java.awt.Color(76, 76, 76));
        PriceLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(PriceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 460, 390, 120));
        getContentPane().add(PenerimaField, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 419, 240, 40));

        TujuanField.setBackground(new java.awt.Color(237, 238, 254));
        TujuanField.setFont(new java.awt.Font("Fira Sans", 0, 23)); // NOI18N
        TujuanField.setForeground(new java.awt.Color(76, 76, 76));
        TujuanField.setBorder(null);
        getContentPane().add(TujuanField, new org.netbeans.lib.awtextra.AbsoluteConstraints(878, 240, 230, 40));

        KeepDryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_SendPackage_KeepDry.png"))); // NOI18N
        KeepDryButton.setBorderPainted(false);
        KeepDryButton.setContentAreaFilled(false);
        KeepDryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KeepDryButtonActionPerformed(evt);
            }
        });
        getContentPane().add(KeepDryButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 410, 70, 71));

        FragileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_SendPackage_Fragile.png"))); // NOI18N
        FragileButton.setBorderPainted(false);
        FragileButton.setContentAreaFilled(false);
        FragileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FragileButtonActionPerformed(evt);
            }
        });
        getContentPane().add(FragileButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 410, 80, 71));

        FlameableButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_SendPackage_Flammable.png"))); // NOI18N
        FlameableButton.setBorderPainted(false);
        FlameableButton.setContentAreaFilled(false);
        FlameableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FlameableButtonActionPerformed(evt);
            }
        });
        getContentPane().add(FlameableButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 410, 80, 71));

        ProtectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_SendPackage_Protect.png"))); // NOI18N
        ProtectButton.setBorderPainted(false);
        ProtectButton.setContentAreaFilled(false);
        ProtectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProtectButtonActionPerformed(evt);
            }
        });
        getContentPane().add(ProtectButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 410, 80, 71));

        SendPackageBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_BG_SendPackage.png"))); // NOI18N
        getContentPane().add(SendPackageBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        TujuanCombobox.setBackground(new java.awt.Color(237, 238, 254));
        TujuanCombobox.setForeground(new java.awt.Color(76, 76, 76));
        TujuanCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Kota-" }));
        TujuanCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TujuanComboboxActionPerformed(evt);
            }
        });
        getContentPane().add(TujuanCombobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(1115, 240, 90, 40));

        AsalCombobox.setBackground(new java.awt.Color(237, 238, 254));
        AsalCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Kota-" }));
        AsalCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AsalComboboxActionPerformed(evt);
            }
        });
        getContentPane().add(AsalCombobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 240, 100, 40));

        TambahanBGKirim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_BG_Kategori_SendPackage.png"))); // NOI18N
        getContentPane().add(TambahanBGKirim, new org.netbeans.lib.awtextra.AbsoluteConstraints(785, 323, -1, -1));

        CostCalcBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_BG_CalcCost.png"))); // NOI18N
        getContentPane().add(CostCalcBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        PriceCalcButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_CalcCost.png"))); // NOI18N
        PriceCalcButton.setBorderPainted(false);
        PriceCalcButton.setContentAreaFilled(false);
        PriceCalcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PriceCalcButtonActionPerformed(evt);
            }
        });
        getContentPane().add(PriceCalcButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 450, 383, 145));

        CekHistoryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_ShippingHistory.png"))); // NOI18N
        CekHistoryButton.setBorderPainted(false);
        CekHistoryButton.setContentAreaFilled(false);
        CekHistoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CekHistoryButtonActionPerformed(evt);
            }
        });
        getContentPane().add(CekHistoryButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 290, 380, 150));

        SendPackageButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_SendPackage.png"))); // NOI18N
        SendPackageButton.setBorderPainted(false);
        SendPackageButton.setContentAreaFilled(false);
        SendPackageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendPackageButtonActionPerformed(evt);
            }
        });
        getContentPane().add(SendPackageButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 140, 380, 150));

        SearchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_Search.png"))); // NOI18N
        SearchButton.setBorderPainted(false);
        SearchButton.setContentAreaFilled(false);
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });
        getContentPane().add(SearchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 329, 111, 49));
        SearchButton.setVisible(false);

        SettingGIF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/setting-vector.gif"))); // NOI18N
        getContentPane().add(SettingGIF, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 130, 419, 511));

        Vector.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Vector.gif"))); // NOI18N
        getContentPane().add(Vector, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 370, -1, -1));

        SearchBar.setFont(new java.awt.Font("Fira Sans", 1, 20)); // NOI18N
        SearchBar.setToolTipText("");
        SearchBar.setBorder(null);
        SearchBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBarActionPerformed(evt);
            }
        });
        getContentPane().add(SearchBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(318, 324, 430, 57));

        SearchBarBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_TextField_Search.png"))); // NOI18N
        getContentPane().add(SearchBarBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 320, -1, -1));
        SearchBarBG.setVisible(false);

        UserMenuBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_BG_Home.png"))); // NOI18N
        getContentPane().add(UserMenuBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        SeeDetailButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_LihatDetail.png"))); // NOI18N
        SeeDetailButton.setBorderPainted(false);
        SeeDetailButton.setContentAreaFilled(false);
        getContentPane().add(SeeDetailButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 640, 154, 78));

        jScrollPane1.setViewportView(HistoryList);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 210, 440, 380));

        BGHistory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_BG_ShippingHistory.png"))); // NOI18N
        getContentPane().add(BGHistory, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 390, -1, -1));

        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 400, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CekResiButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CekResiButtonMouseClicked
        if (!cek_resi) {
            ButtonController(false, false, true, false, false, false);
        }
    }//GEN-LAST:event_CekResiButtonMouseClicked

    private void HomeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeButtonMouseClicked
        if (!home_menu) {
            ButtonController(false, true, false, false, false, false);
        }
    }//GEN-LAST:event_HomeButtonMouseClicked

    private void SettingButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SettingButtonMouseClicked
        if (!setting) {
            ButtonController(true, false, false, false, false, false);
        }
    }//GEN-LAST:event_SettingButtonMouseClicked

    private void LogOutButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogOutButtonMouseClicked
        LoginMenu LM = new LoginMenu(userlist, usedEmail, DeliveryList, ListKurir);
        dispose();
        LM.setVisible(true);
        LM.pack();
        LM.setLocationRelativeTo(null);
        LM.setDefaultCloseOperation(CreateAccountPage.EXIT_ON_CLOSE);
        LM.setResizable(false);
    }//GEN-LAST:event_LogOutButtonMouseClicked

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        String RESI = this.SearchBar.getText();
        if (RESI.equals("")) {
            JOptionPane.showMessageDialog(null, "Tolong masukkan resi yang ingin dicari terlebih dahulu", "Invalid Input!", JOptionPane.WARNING_MESSAGE);
        } else {
            if (DeliveryList.containsKey(RESI)) {
                Package selected = DeliveryList.get(RESI);
                DetailPackage DP = new DetailPackage(userlist, usedEmail, DeliveryList, ListKurir, selected, currentUser);
                dispose();
                DP.setVisible(true);
                DP.pack();
                DP.setLocationRelativeTo(null);
                DP.setDefaultCloseOperation(DetailPackage.EXIT_ON_CLOSE);
                DP.setResizable(false);
            } else {
                JOptionPane.showMessageDialog(null, "Resi tidak ditemukan!", "Resi Invalid!", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void CekHistoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CekHistoryButtonActionPerformed
        UpdateState(false, false, false, true, false, false);
        ButtonController(false, false, false, true, false, false);
    }//GEN-LAST:event_CekHistoryButtonActionPerformed

    private void CekResiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CekResiButtonActionPerformed

    }//GEN-LAST:event_CekResiButtonActionPerformed

    private void SearchBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchBarActionPerformed

    private void SendPackageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendPackageButtonActionPerformed
        if (!send) {
            ButtonController(false, false, false, false, true, false);
        }
    }//GEN-LAST:event_SendPackageButtonActionPerformed

    private void CalculateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalculateBtnActionPerformed
        try {
            Kota A = MapKota.get(listkota.get(AsalCombobox.getSelectedIndex()));
            Kota B = MapKota.get(listkota.get(TujuanCombobox.getSelectedIndex()));
            double weight = Integer.parseInt(SendBeratField.getText());
            int price = CityCalc.CalcHarga(A, B, weight);

            if (AsalCombobox.getSelectedIndex() == 0) {
                throw new Exception("Tolong masukkan Kota Asal yang valid.");
            } else if (TujuanCombobox.getSelectedIndex() == 0) {
                throw new Exception("Tolong masukkan Kota Tujuan yang valid.");
            } else if (weight == 0.0) {
                throw new Exception("Berat Tidak bisa 0 Kg.");
            } else if (AsalField.getText().equals("")) {
                throw new Exception("Alamat masih kosong");
            } else if (TujuanField.getText().equals("")) {
                throw new Exception("Alamat masih kosong");
            } else if (KategoriCombobox.getSelectedIndex() == 0) {
                throw new Exception("Silahkan pilih kategori barang");
            } else {
                if (send) {
                    PriceLabelSend.setText("Rp. " + Integer.toString(price));
                    KirimButton.setVisible(true);
                    KirimButton.setEnabled(true);
                } else {
                    PriceLabel.setText("Rp. " + Integer.toString(price));
                }
            }
        } catch (Exception e) {
            String AlamatAsal = AsalField.getText();
            String TujuanAsal = TujuanField.getText();
            if (AlamatAsal.equals("") || TujuanAsal.equals("")) {
                JOptionPane.showMessageDialog(null, "Input Alamat Invalid!", "DNF App", 2);
            } else {
                System.out.println(e.getMessage()); //debugging purposes.
                JOptionPane.showMessageDialog(null, e.getMessage(), "DNF App", 2);
            }
        }
    }//GEN-LAST:event_CalculateBtnActionPerformed

    private void TujuanComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TujuanComboboxActionPerformed

    }//GEN-LAST:event_TujuanComboboxActionPerformed

    private void LogOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogOutButtonActionPerformed

    }//GEN-LAST:event_LogOutButtonActionPerformed

    private void PriceCalcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PriceCalcButtonActionPerformed
        if (!calc) {
            ButtonController(false, false, false, false, false, true);
        }
    }//GEN-LAST:event_PriceCalcButtonActionPerformed

    private void KirimButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KirimButtonActionPerformed
        LocalDateTime date = LocalDateTime.now();
        String temp = (String) KategoriCombobox.getSelectedItem();
        String KotaAsal = (String) AsalCombobox.getSelectedItem();
        String KotaTujuan = (String) TujuanCombobox.getSelectedItem();
        String namaPenerima = PenerimaField.getText();
        String daerahPenerima = AsalField.getText() + ", " + KotaTujuan;
        String tempBeratBarang = SendBeratField.getText();
        String nmPengirim = currentUser.getUsername();
        String daerahPengirim = TujuanField.getText() + ", " + KotaAsal;
        String keterangan = "MISC";
        String tempKategori = (String) KategoriCombobox.getSelectedItem();

        String resi = "DF";
        int bulan = (int) date.getMonthValue();
        int tanggal = (int) date.getDayOfMonth();
        int tahun = (int) date.getYear();
        int jam = (int) date.getHour();
        int menit = (int) date.getMinute();
        int detik = (int) date.getSecond();
        String month = String.valueOf(bulan);
        String det = String.valueOf(tanggal);
        String year = String.valueOf(tahun);
        String timea = String.valueOf(jam);
        String timeb = String.valueOf(menit);
        String timec = String.valueOf(detik);
        char[] charberat = tempBeratBarang.toCharArray();
        resi += timea + timeb + timec + det + month + year;
        System.out.println(resi);

        //pengecekan ada yang kosong ato nda
        boolean lulusGede = true;
        if ((namaPenerima.equals("") || daerahPenerima.equals("") || nmPengirim.equals("") || daerahPengirim.equals("") || tempKategori.equals("-Kategori-"))) {
            lulusGede = false;
            JOptionPane.showMessageDialog(this, "Input tidak valid!", "DnF", 2);
        }

        boolean lulusCilik = true;
        String tempMinus = SendBeratField.getText().substring(0, 1);
        if (SendBeratField.getText().equals("0") || tempMinus.equals("-")) {
            JOptionPane.showMessageDialog(this, "Berat tidak valid!", "DnF", 2);
            lulusCilik = false;
        }

        if (lulusGede == true && lulusCilik == true) { //lulus semua 
            for (int i = 0; i < charberat.length; i++) {
                if (charberat[i] >= 65 && charberat[i] <= 122) {
                    JOptionPane.showMessageDialog(this, "Berat tidak valid!", "DnF", 2);
                } else if (charberat[i] >= 48 && charberat[i] <= 57) {
                    int beratBarang = Integer.parseInt(tempBeratBarang);
                    if (temp.equals("Food and Beverages")) {
                        Package paket = new FnB(1, resi, nmPengirim, namaPenerima, daerahPengirim, daerahPenerima, beratBarang, fragile, false, keepdry, protectfromheat, extraprotect);
                        paket.updateTrack("Barang diterima DNF");
                        DeliveryList.put(resi, paket);
                        currentUser.addToHistory(paket);
                    } else if (temp.equals("Sports")) {
                        Package paket = new Sports(resi, nmPengirim, namaPenerima, daerahPengirim, daerahPenerima, beratBarang, fragile, false, keepdry, protectfromheat, extraprotect);
                        paket.updateTrack("Barang diterima DNF");
                        DeliveryList.put(resi, paket);
                        currentUser.addToHistory(paket);
                    } else if (temp.equals("Electronic")) {
                        Package paket = new Electronic(resi, nmPengirim, namaPenerima, daerahPengirim, daerahPenerima, beratBarang, fragile, flammable, keepdry, protectfromheat, extraprotect);
                        paket.updateTrack("Barang diterima DNF");
                        DeliveryList.put(resi, paket);
                        currentUser.addToHistory(paket);
                    } else if (temp.equals("Beauty and Fashion")) {
                        Package paket = new BnF(resi, nmPengirim, namaPenerima, daerahPengirim, daerahPenerima, beratBarang, fragile, flammable, keepdry, protectfromheat, extraprotect);
                        paket.updateTrack("Barang diterima DNF");
                        DeliveryList.put(resi, paket);
                        currentUser.addToHistory(paket);
                    } else if (temp.equals("Hobby and Collections")) {
                        Package paket = new HnC(resi, nmPengirim, namaPenerima, daerahPengirim, daerahPenerima, beratBarang, fragile, flammable, keepdry, protectfromheat, extraprotect);
                        paket.updateTrack("Barang diterima DNF");
                        DeliveryList.put(resi, paket);
                        currentUser.addToHistory(paket);
                    } else {
                        if (keterangan.equals("Masukkan keterangan")) {
                            Package paket = new Others("-", resi, nmPengirim, namaPenerima, daerahPengirim, daerahPenerima, beratBarang, fragile, flammable, keepdry, protectfromheat, extraprotect);
                            paket.updateTrack("Barang diterima DNF");
                            DeliveryList.put(resi, paket);
                            currentUser.addToHistory(paket);
                        } else {
                            Package paket = new Others(keterangan, resi, nmPengirim, namaPenerima, daerahPengirim, daerahPenerima, beratBarang, fragile, flammable, keepdry, protectfromheat, extraprotect);
                            paket.updateTrack("Barang diterima DNF");
                            DeliveryList.put(resi, paket);
                            currentUser.addToHistory(paket);
                        }
                    }

                    JOptionPane.showMessageDialog(null, "Entry Paket Berhasil! Nomor Resi : " + resi, "DNF App", 1);
                    Serializeation.savePackage(DeliveryList);
                    ButtonController(false, true, false, false, false, false);
                    PenerimaField.setText("");
                }
            }
        }

    }//GEN-LAST:event_KirimButtonActionPerformed

    private void ProfileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProfileButtonActionPerformed

    }//GEN-LAST:event_ProfileButtonActionPerformed

    private void SettingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SettingButtonActionPerformed
        if (!setting) {
            ButtonController(true, false, false, false, false, false);
        }
    }//GEN-LAST:event_SettingButtonActionPerformed

    private void EditProfileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditProfileButtonActionPerformed
        UserEditProfilePage EditMenu = new UserEditProfilePage(userlist, usedEmail, DeliveryList, ListKurir, currentUser);
        dispose();
        EditMenu.setVisible(true);
        EditMenu.pack();
        EditMenu.setLocationRelativeTo(null);
        EditMenu.setDefaultCloseOperation(CreateAccountPage.EXIT_ON_CLOSE);
        EditMenu.setResizable(false);
    }//GEN-LAST:event_EditProfileButtonActionPerformed

    private void AppVerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AppVerButtonActionPerformed
        JOptionPane.showMessageDialog(null, "DNFApp Product Version 1.0.0.0 Build 2022", "DNF App", 1);
    }//GEN-LAST:event_AppVerButtonActionPerformed

    private void AsalComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AsalComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AsalComboboxActionPerformed

    private void KeepDryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KeepDryButtonActionPerformed
        if (!keepdry) {
            keepdry = true;
            this.KeepDryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_SendPackage_KeepDry_Click.png")));
        } else {
            keepdry = false;
            this.KeepDryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_SendPackage_KeepDry.png")));
        }
    }//GEN-LAST:event_KeepDryButtonActionPerformed

    private void FragileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FragileButtonActionPerformed
        if (!fragile) {
            fragile = true;
            this.FragileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_SendPackage_Fragile_Click.png")));
        } else {
            fragile = false;
            this.FragileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_SendPackage_Fragile.png")));
        }
    }//GEN-LAST:event_FragileButtonActionPerformed

    private void ProtectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProtectButtonActionPerformed
        if (!protectfromheat) {
            protectfromheat = true;
            this.ProtectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_SendPackage_Protect_Click.png")));
        } else {
            protectfromheat = false;
            this.ProtectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_SendPackage_Protect.png")));
        }
    }//GEN-LAST:event_ProtectButtonActionPerformed

    private void FlameableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FlameableButtonActionPerformed
        if (!flammable) {
            flammable = true;
            this.FlameableButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_SendPackage_Flammable.png")));

        } else {
            flammable = false;
            this.FlameableButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_SendPackage_Flammable_Click.png")));
        }
    }//GEN-LAST:event_FlameableButtonActionPerformed

    private void HomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeButtonActionPerformed
        
    }//GEN-LAST:event_HomeButtonActionPerformed

    public void generateCityCalc() {
        MapKota = GenerateCity.generateCityMap(MapKota);
        listkota = GenerateCity.generateCity(listkota);
        for (int i = 0; i < listkota.size(); i++) {
            AsalCombobox.addItem(listkota.get(i));
            TujuanCombobox.addItem(listkota.get(i));
        }
    }

    private void UpdateState(boolean setting, boolean home, boolean cek, boolean history, boolean send, boolean calc) {
        this.cek_resi = cek;
        this.home_menu = home;
        this.setting = setting;
        this.history = history;
        this.send = send;
        this.calc = calc;
    }

    private void UpdateVisibility(int x) {
        switch (x) {
            case 1: //Home Mode
                this.UserMenuBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_BG_Home.png")));
                this.SearchBarBG.setVisible(false);
                this.SearchButton.setVisible(false);
                this.Vector.setVisible(true);
                this.SearchBar.setVisible(false);
                this.SearchBar.setEditable(false);
                this.SearchButton.setEnabled(false);
                this.CekHistoryButton.setVisible(true);
                this.CekHistoryButton.setEnabled(true);
                this.SendPackageButton.setVisible(true);
                this.SendPackageButton.setEnabled(true);
                this.HistoryList.setEnabled(false);
                this.HistoryList.setVisible(false);
                this.UserMenuBG.setVisible(true);
                this.AsalField.setVisible(false);
                this.AsalField.setEditable(false);
                this.TujuanField.setVisible(false);
                this.TujuanField.setEditable(false);
                this.TujuanCombobox.setVisible(false);
                this.TujuanCombobox.setEditable(false);
                this.SendPackageBG.setVisible(false);
                this.SendBeratField.setVisible(false);
                this.SendBeratField.setEditable(false);
                this.PriceLabel.setVisible(false);
                this.CalculateBtn.setVisible(false);
                this.CalculateBtn.setEnabled(false);
                this.AsalCombobox.setVisible(false);
                this.AsalCombobox.setEditable(false);
                this.SeeDetailButton.setVisible(false);
                this.SeeDetailButton.setEnabled(false);
                this.PriceCalcButton.setVisible(true);
                this.PriceCalcButton.setEnabled(true);
                this.CostCalcBG.setVisible(false);
                KirimButton.setVisible(false);
                KirimButton.setEnabled(false);
                SettingGIF.setVisible(false);
                EditProfileButton.setVisible(false);
                EditProfileButton.setEnabled(false);
                AppVerButton.setEnabled(false);
                AppVerButton.setVisible(false);
                TambahanBGKirim.setVisible(false);
                KategoriCombobox.setVisible(false);
                KategoriCombobox.setEnabled(false);
                PriceLabelSend.setVisible(false);
                KeepDryButton.setVisible(false);
                KeepDryButton.setEnabled(false);
                FragileButton.setVisible(false);
                FragileButton.setEnabled(false);
                FlameableButton.setVisible(false);
                FlameableButton.setEnabled(false);
                ProtectButton.setVisible(false);
                ProtectButton.setEnabled(false);
                PenerimaField.setEditable(false);
                PenerimaField.setVisible(false);
                break;

            case 2: //Cek Resi Mode
                this.UserMenuBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_BG_CekResi.png")));
                this.SearchBarBG.setVisible(true);
                this.SearchButton.setVisible(true);
                this.Vector.setVisible(false);
                this.SearchBar.setVisible(true);
                this.SearchBar.setEditable(true);
                this.SearchButton.setEnabled(true);
                this.CekHistoryButton.setVisible(false);
                this.CekHistoryButton.setEnabled(false);
                this.SendPackageButton.setVisible(false);
                this.SendPackageButton.setEnabled(false);
                this.HistoryList.setEnabled(false);
                this.HistoryList.setVisible(false);
                this.UserMenuBG.setVisible(true);
                this.AsalField.setVisible(false);
                this.AsalField.setEditable(false);
                this.TujuanField.setVisible(false);
                this.TujuanField.setEditable(false);
                this.TujuanCombobox.setVisible(false);
                this.TujuanCombobox.setEditable(false);
                this.SendPackageBG.setVisible(false);
                this.SendBeratField.setVisible(false);
                this.SendBeratField.setEditable(false);
                this.PriceLabel.setVisible(false);
                this.CalculateBtn.setVisible(false);
                this.CalculateBtn.setEnabled(false);
                this.AsalCombobox.setVisible(false);
                this.AsalCombobox.setEditable(false);
                this.SeeDetailButton.setVisible(false);
                this.SeeDetailButton.setEnabled(false);
                this.PriceCalcButton.setVisible(false);
                this.PriceCalcButton.setEnabled(false);
                this.CostCalcBG.setVisible(false);
                KirimButton.setVisible(false);
                KirimButton.setEnabled(false);
                SettingGIF.setVisible(false);
                EditProfileButton.setVisible(false);
                EditProfileButton.setEnabled(false);
                AppVerButton.setEnabled(false);
                AppVerButton.setVisible(false);
                TambahanBGKirim.setVisible(false);
                KategoriCombobox.setVisible(false);
                KategoriCombobox.setEnabled(false);
                SearchBar.setText("");
                PriceLabelSend.setVisible(false);
                KeepDryButton.setVisible(false);
                KeepDryButton.setEnabled(false);
                FragileButton.setVisible(false);
                FragileButton.setEnabled(false);
                FlameableButton.setVisible(false);
                FlameableButton.setEnabled(false);
                ProtectButton.setVisible(false);
                ProtectButton.setEnabled(false);
                PenerimaField.setEditable(false);
                PenerimaField.setVisible(false);
                break;

            case 3: //Settings Mode
                this.UserMenuBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_BG_Setting.png")));
                this.SearchBarBG.setVisible(false);
                this.SearchButton.setVisible(false);
                this.Vector.setVisible(false);
                this.SearchBar.setVisible(false);
                this.SearchBar.setEditable(false);
                this.SearchButton.setEnabled(false);
                this.CekHistoryButton.setVisible(false);
                this.CekHistoryButton.setEnabled(false);
                this.SendPackageButton.setVisible(false);
                this.SendPackageButton.setEnabled(false);
                this.HistoryList.setEnabled(false);
                this.HistoryList.setVisible(false);
                this.UserMenuBG.setVisible(true);
                this.AsalField.setVisible(false);
                this.AsalField.setEditable(false);
                this.TujuanField.setVisible(false);
                this.TujuanField.setEditable(false);
                this.TujuanCombobox.setVisible(false);
                this.TujuanCombobox.setEditable(false);
                this.SendPackageBG.setVisible(false);
                this.SendBeratField.setVisible(false);
                this.SendBeratField.setEditable(false);
                this.PriceLabel.setVisible(false);
                this.CalculateBtn.setVisible(false);
                this.CalculateBtn.setEnabled(false);
                this.AsalCombobox.setVisible(false);
                this.AsalCombobox.setEditable(false);
                this.SeeDetailButton.setVisible(false);
                this.SeeDetailButton.setEnabled(false);
                this.PriceCalcButton.setVisible(false);
                this.PriceCalcButton.setEnabled(false);
                this.CostCalcBG.setVisible(false);
                KirimButton.setVisible(false);
                KirimButton.setEnabled(false);
                SettingGIF.setVisible(true);
                EditProfileButton.setVisible(true);
                EditProfileButton.setEnabled(true);
                AppVerButton.setEnabled(true);
                AppVerButton.setVisible(true);
                TambahanBGKirim.setVisible(false);
                KategoriCombobox.setVisible(false);
                KategoriCombobox.setEnabled(false);
                PriceLabelSend.setVisible(false);
                KeepDryButton.setVisible(false);
                KeepDryButton.setEnabled(false);
                FragileButton.setVisible(false);
                FragileButton.setEnabled(false);
                FlameableButton.setVisible(false);
                FlameableButton.setEnabled(false);
                ProtectButton.setVisible(false);
                ProtectButton.setEnabled(false);
                PenerimaField.setEditable(false);
                PenerimaField.setVisible(false);
                break;

            case 4: //See History Mode
                this.SearchBarBG.setVisible(false);
                this.SearchButton.setVisible(false);
                this.Vector.setVisible(false);
                this.SearchBar.setVisible(false);
                this.SearchBar.setEditable(false);
                this.SearchButton.setEnabled(false);
                this.CekHistoryButton.setVisible(false);
                this.CekHistoryButton.setEnabled(false);
                this.SendPackageButton.setVisible(false);
                this.SendPackageButton.setEnabled(false);
                this.HistoryList.setEnabled(false);
                this.HistoryList.setVisible(false);
                this.UserMenuBG.setVisible(false);
                this.BGHistory.setVisible(true);
                this.AsalField.setVisible(false);
                this.AsalField.setEditable(false);
                this.TujuanField.setVisible(false);
                this.TujuanField.setEditable(false);
                this.TujuanCombobox.setVisible(false);
                this.TujuanCombobox.setEditable(false);
                this.SendPackageBG.setVisible(false);
                this.SendBeratField.setVisible(false);
                this.SendBeratField.setEditable(false);
                this.PriceLabel.setVisible(false);
                this.CalculateBtn.setVisible(false);
                this.CalculateBtn.setEnabled(false);
                this.AsalCombobox.setVisible(false);
                this.AsalCombobox.setEditable(false);
                this.SeeDetailButton.setVisible(false);
                this.SeeDetailButton.setEnabled(false);
                this.SeeDetailButton.setVisible(true);
                this.SeeDetailButton.setEnabled(true);
                this.PriceCalcButton.setVisible(false);
                this.PriceCalcButton.setEnabled(false);
                this.CostCalcBG.setVisible(false);
                KirimButton.setVisible(false);
                KirimButton.setEnabled(false);
                SettingGIF.setVisible(false);
                EditProfileButton.setVisible(false);
                EditProfileButton.setEnabled(false);
                AppVerButton.setEnabled(false);
                AppVerButton.setVisible(false);
                TambahanBGKirim.setVisible(false);
                KategoriCombobox.setVisible(false);
                KategoriCombobox.setEnabled(false);
                PriceLabelSend.setVisible(false);
                KeepDryButton.setVisible(false);
                KeepDryButton.setEnabled(false);
                FragileButton.setVisible(false);
                FragileButton.setEnabled(false);
                FlameableButton.setVisible(false);
                FlameableButton.setEnabled(false);
                ProtectButton.setVisible(false);
                ProtectButton.setEnabled(false);
                PenerimaField.setEditable(false);
                PenerimaField.setVisible(false);
                break;

            case 5: //Send Package Mode
                this.SearchBarBG.setVisible(false);
                this.SearchButton.setVisible(false);
                this.Vector.setVisible(false);
                this.SearchBar.setVisible(false);
                this.SearchBar.setEditable(false);
                this.SearchButton.setEnabled(false);
                this.CekHistoryButton.setVisible(false);
                this.CekHistoryButton.setEnabled(false);
                this.SendPackageButton.setVisible(false);
                this.SendPackageButton.setEnabled(false);
                this.HistoryList.setEnabled(false);
                this.HistoryList.setVisible(false);
                this.UserMenuBG.setVisible(false);
                this.BGHistory.setVisible(false);
                this.AsalField.setVisible(true);
                this.AsalField.setEditable(true);
                this.TujuanField.setVisible(true);
                this.TujuanField.setEditable(true);
                this.TujuanCombobox.setVisible(true);
                this.TujuanCombobox.setEditable(true);
                this.SendPackageBG.setVisible(true);
                this.SendBeratField.setVisible(true);
                this.SendBeratField.setEditable(true);
                this.PriceLabel.setVisible(true);
                this.CalculateBtn.setVisible(true);
                this.CalculateBtn.setEnabled(true);
                this.AsalCombobox.setVisible(true);
                this.AsalCombobox.setEditable(true);
                this.SeeDetailButton.setVisible(true);
                this.SeeDetailButton.setEnabled(true);
                this.SeeDetailButton.setVisible(false);
                this.SeeDetailButton.setEnabled(false);
                this.PriceCalcButton.setVisible(false);
                this.PriceCalcButton.setEnabled(false);
                this.CostCalcBG.setVisible(false);
                KirimButton.setVisible(false);
                KirimButton.setEnabled(false);
                SettingGIF.setVisible(false);
                EditProfileButton.setVisible(false);
                EditProfileButton.setEnabled(false);
                AppVerButton.setEnabled(false);
                AppVerButton.setVisible(false);
                TambahanBGKirim.setVisible(true);
                KategoriCombobox.setVisible(true);
                KategoriCombobox.setEnabled(true);
                AsalField.setText("");
                TujuanField.setText("");
                TujuanCombobox.setSelectedIndex(0);
                AsalCombobox.setSelectedIndex(0);
                KategoriCombobox.setSelectedIndex(0);
                SendBeratField.setText("");
                PriceLabel.setText("");
                PriceLabel.setVisible(false);
                PriceLabelSend.setVisible(true);
                PriceLabelSend.setText("");
                KeepDryButton.setVisible(true);
                KeepDryButton.setEnabled(true);
                FragileButton.setVisible(true);
                FragileButton.setEnabled(true);
                FlameableButton.setVisible(true);
                FlameableButton.setEnabled(true);
                ProtectButton.setVisible(true);
                ProtectButton.setEnabled(true);
                PenerimaField.setEditable(true);
                PenerimaField.setVisible(true);
                break;

            case 6: //Cost Calculator Mode
                this.SearchBarBG.setVisible(false);
                this.SearchButton.setVisible(false);
                this.Vector.setVisible(false);
                this.SearchBar.setVisible(false);
                this.SearchBar.setEditable(false);
                this.SearchButton.setEnabled(false);
                this.CekHistoryButton.setVisible(false);
                this.CekHistoryButton.setEnabled(false);
                this.SendPackageButton.setVisible(false);
                this.SendPackageButton.setEnabled(false);
                this.HistoryList.setEnabled(false);
                this.HistoryList.setVisible(false);
                this.UserMenuBG.setVisible(false);
                this.BGHistory.setVisible(false);
                this.AsalField.setVisible(true);
                this.AsalField.setEditable(true);
                this.TujuanField.setVisible(true);
                this.TujuanField.setEditable(true);
                this.TujuanCombobox.setVisible(true);
                this.TujuanCombobox.setEditable(true);
                this.SendPackageBG.setVisible(false);
                this.SendBeratField.setVisible(true);
                this.SendBeratField.setEditable(true);
                this.PriceLabel.setVisible(true);
                this.CalculateBtn.setVisible(true);
                this.CalculateBtn.setEnabled(true);
                this.AsalCombobox.setVisible(true);
                this.AsalCombobox.setEditable(true);
                this.SeeDetailButton.setVisible(true);
                this.SeeDetailButton.setEnabled(true);
                this.SeeDetailButton.setVisible(false);
                this.SeeDetailButton.setEnabled(false);
                this.PriceCalcButton.setVisible(false);
                this.PriceCalcButton.setEnabled(false);
                this.CostCalcBG.setVisible(true);
                KirimButton.setVisible(false);
                KirimButton.setEnabled(false);
                SettingGIF.setVisible(false);
                EditProfileButton.setVisible(false);
                EditProfileButton.setEnabled(false);
                AppVerButton.setEnabled(false);
                AppVerButton.setVisible(false);
                TambahanBGKirim.setVisible(false);
                KategoriCombobox.setVisible(false);
                KategoriCombobox.setEnabled(false);
                AsalField.setText("");
                TujuanField.setText("");
                TujuanCombobox.setSelectedIndex(0);
                AsalCombobox.setSelectedIndex(0);
                KategoriCombobox.setSelectedIndex(0);
                SendBeratField.setText("");
                PriceLabel.setText("");
                PriceLabel.setVisible(true);
                PriceLabelSend.setVisible(true);
                PriceLabelSend.setText("");
                KeepDryButton.setVisible(false);
                KeepDryButton.setEnabled(false);
                FragileButton.setVisible(false);
                FragileButton.setEnabled(false);
                FlameableButton.setVisible(false);
                FlameableButton.setEnabled(false);
                ProtectButton.setVisible(false);
                ProtectButton.setEnabled(false);
                PenerimaField.setEditable(false);
                PenerimaField.setVisible(false);
                break;
        }
    }

    private void ButtonController(boolean setting, boolean home, boolean cek, boolean history, boolean send, boolean calc) {
        if (setting && !home && !cek && !history && !send && !calc) { //Settings Mode
            UpdateState(setting, home, cek, false, false, false);
            this.SettingButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_Setting_1.png")));
            this.HomeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_Home_0.png")));
            this.CekResiButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_CekResi_0.png")));
            UpdateVisibility(3);
        } else if (!setting && home && !cek && !history && !send && !calc) { //Home MOde
            UpdateState(setting, home, cek, false, false, false);
            this.SettingButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_Setting_0.png")));
            this.HomeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_Home_1.png")));
            this.CekResiButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_CekResi_0.png")));
            UpdateVisibility(1);
        } else if (!setting && !home && cek && !history && !send && !calc) { //Cek Resi Mode
            UpdateState(setting, home, cek, false, false, false);
            this.SettingButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_Setting_0.png")));
            this.HomeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_Home_0.png")));
            this.CekResiButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_CekResi_1.png")));
            UpdateVisibility(2);
        } else if (!setting && !home && !cek && history && !send && !calc) { //See History Mode
            UpdateState(setting, home, cek, history, send, false);
            this.SettingButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_Setting_0.png")));
            this.HomeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_Home_0.png")));
            this.CekResiButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_CekResi_0.png")));
            UpdateVisibility(4);
        } else if (!setting && !home && !cek && !history && send && !calc) { //Send Package Mode
            UpdateState(setting, home, cek, history, send, false);
            this.SettingButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_Setting_0.png")));
            this.HomeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_Home_0.png")));
            this.CekResiButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_CekResi_0.png")));
            UpdateVisibility(5);
        } else if (!setting && !home && !cek && !history && !send && calc) { //Calc Cost Mode
            UpdateState(setting, home, cek, history, send, calc);
            this.SettingButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_Setting_0.png")));
            this.HomeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_Home_0.png")));
            this.CekResiButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Button_CekResi_0.png")));
            UpdateVisibility(6);
        }
    }

    public void generateKategori() {
        ArrayList<String> kategori = new ArrayList<>();
        kategori.add("Others");
        setResizable(false);
        kategori.add("Food and Beverages");
        kategori.add("Beauty and Fashion");
        kategori.add("Hobby and Collections");
        kategori.add("Electronic");
        kategori.add("Sports");
        for (int i = 0; i < kategori.size(); i++) {
            KategoriCombobox.addItem(kategori.get(i));
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserMainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserMainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserMainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserMainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserMainMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AppVerButton;
    private javax.swing.JComboBox<String> AsalCombobox;
    private javax.swing.JTextField AsalField;
    private javax.swing.JLabel BGHistory;
    private javax.swing.JButton CalculateBtn;
    private javax.swing.JButton CekHistoryButton;
    private javax.swing.JButton CekResiButton;
    private javax.swing.JLabel CostCalcBG;
    private javax.swing.JButton EditProfileButton;
    private javax.swing.JButton FlameableButton;
    private javax.swing.JButton FragileButton;
    private javax.swing.JList<String> HistoryList;
    private javax.swing.JButton HomeButton;
    private javax.swing.JComboBox<String> KategoriCombobox;
    private javax.swing.JButton KeepDryButton;
    private javax.swing.JButton KirimButton;
    private javax.swing.JButton LogOutButton;
    private javax.swing.JTextField PenerimaField;
    private javax.swing.JButton PriceCalcButton;
    private javax.swing.JLabel PriceLabel;
    private javax.swing.JLabel PriceLabelSend;
    private javax.swing.JButton ProfileButton;
    private javax.swing.JButton ProtectButton;
    private javax.swing.JTextField SearchBar;
    private javax.swing.JLabel SearchBarBG;
    private javax.swing.JButton SearchButton;
    private javax.swing.JButton SeeDetailButton;
    private javax.swing.JTextField SendBeratField;
    private javax.swing.JLabel SendPackageBG;
    private javax.swing.JButton SendPackageButton;
    private javax.swing.JButton SettingButton;
    private javax.swing.JLabel SettingGIF;
    private javax.swing.JLabel TambahanBGKirim;
    private javax.swing.JComboBox<String> TujuanCombobox;
    private javax.swing.JTextField TujuanField;
    private javax.swing.JLabel UserMenuBG;
    private javax.swing.JLabel Vector;
    private javax.swing.JLabel WelcomeLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
